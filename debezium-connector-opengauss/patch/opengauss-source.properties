# name: source端连接器名称
name=connect-opengauss-source
# connector.class: 连接器的启动类
connector.class=io.debezium.connector.opengauss.OpengaussConnector
# database.hostname: opengauss数据库主机ip
database.hostname=127.0.0.1
# database.port: opengauss数据库端口
database.port=5432
# database.user: opengauss数据库用户
database.user=db_user
# database.password: opengauss数据库用户密码
database.password=*****
# database.server.id: opengauss数据库实例id
database.server.id=1
# database.server.name: opengauss数据库实例名称
database.server.name=opengauss
# database.history.kafka.bootstrap.servers: kafka服务器地址
database.history.kafka.bootstrap.servers=127.0.0.1:9092
# database.history.kafka.topic: kafka历史topic名称
database.history.kafka.topic=opengauss_history
# include.schema.changes: boolean类型，指定连接器是否将变更发布到kafka主题中
include.schema.changes=true
# tasks.max: 连接器创建的最大任务数
tasks.max=1
# database.dbname: opengauss数据库名称
database.dbname=db_name
# slot.name: opengauss逻辑复制槽名称
slot.name=slot_name
# 创建逻辑复制槽插件名称
plugin.name=pgoutput
# transforms: kafka topic路由转发名称
transforms=route
# kafka topic路由转发类型
transforms.route.type=org.apache.kafka.connect.transforms.RegexRouter
# transforms.route.regex: kafka topic路由转发正则匹配表达式，正则匹配按照前缀匹配
# 将dml topic路由转发至同一topic，其中正则表达式中的opengauss与database.server.name对应
transforms.route.regex=^opengauss(.*)
# transforms.route.replacement: kafka topic路由转发后的topic名称，该参数与opengauss-sink.properties的配置项topics相对应
transforms.route.replacement=dml_topic
# 配置debezium对小数类型的处理模式
decimal.handling.mode=string
# include.unknown.datatypes: 兼容更多数据类型，默认为true
include.unknown.datatypes=true
# slot.drop.on.stop=true：停止时删除逻辑复制槽与发布订阅，默认为true
slot.drop.on.stop=true
# snapshot.mode=never：快照模式，默认为never
snapshot.mode=never
